"""Initial migration

Revision ID: c6d3684bbaa2
Revises: 
Create Date: 2025-09-09 19:49:47.504069

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c6d3684bbaa2'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('gigs',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('expert_id', sa.String(), nullable=True),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('profile_image_url', sa.String(), nullable=True),
    sa.Column('banner_image_url', sa.String(), nullable=True),
    sa.Column('languages', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('category', sa.Enum('AUTOMOBILE_ADVICE', 'ELECTRONIC_DEVICE_ADVICE', 'HOME_APPLIANCE_GUIDANCE', 'EDUCATION_CAREER_GUIDANCE', name='expertcategory'), nullable=False),
    sa.Column('service_description', sa.Text(), nullable=True),
    sa.Column('hourly_rate', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('availability_preferences', sa.Text(), nullable=True),
    sa.Column('response_time', sa.String(), nullable=True),
    sa.Column('education', sa.Text(), nullable=True),
    sa.Column('experience', sa.Text(), nullable=True),
    sa.Column('certifications', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('government_id_url', sa.String(), nullable=True),
    sa.Column('professional_license_url', sa.String(), nullable=True),
    sa.Column('references', sa.Text(), nullable=True),
    sa.Column('background_check_consent', sa.Boolean(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'PENDING', 'APPROVED', 'REJECTED', 'ACTIVE', 'INACTIVE', name='gigstatus'), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('total_reviews', sa.Integer(), nullable=True),
    sa.Column('total_consultations', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('approved_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gigs_expert_id'), 'gigs', ['expert_id'], unique=False)
    op.create_index(op.f('ix_gigs_id'), 'gigs', ['id'], unique=False)
    op.create_index(op.f('ix_gigs_user_id'), 'gigs', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_gigs_user_id'), table_name='gigs')
    op.drop_index(op.f('ix_gigs_id'), table_name='gigs')
    op.drop_index(op.f('ix_gigs_expert_id'), table_name='gigs')
    op.drop_table('gigs')
    # ### end Alembic commands ###
