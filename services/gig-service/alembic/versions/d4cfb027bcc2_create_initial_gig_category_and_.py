"""Create initial gig, category, and certification tables

Revision ID: d4cfb027bcc2
Revises: 
Create Date: 2025-09-14 01:18:08.109086

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd4cfb027bcc2'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('slug', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('slug')
    )
    op.create_index(op.f('ix_categories_id'), 'categories', ['id'], unique=False)
    op.create_table('certifications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('gig_id', sa.String(), nullable=True),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('thumbnail_url', sa.String(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_certifications_gig_id'), 'certifications', ['gig_id'], unique=False)
    op.create_index(op.f('ix_certifications_id'), 'certifications', ['id'], unique=False)
    op.create_table('gigs',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('expert_id', sa.String(), nullable=True),
    sa.Column('category_id', sa.UUID(), nullable=False),
    sa.Column('service_description', sa.Text(), nullable=True),
    sa.Column('hourly_rate', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('availability_preferences', sa.Text(), nullable=True),
    sa.Column('response_time', sa.String(), nullable=True),
    sa.Column('expertise_areas', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('experience_years', sa.Integer(), nullable=True),
    sa.Column('work_experience', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'PENDING', 'APPROVED', 'REJECTED', 'ACTIVE', 'INACTIVE', name='gigstatus'), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('approved_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gigs_expert_id'), 'gigs', ['expert_id'], unique=False)
    op.create_index(op.f('ix_gigs_id'), 'gigs', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_gigs_id'), table_name='gigs')
    op.drop_index(op.f('ix_gigs_expert_id'), table_name='gigs')
    op.drop_table('gigs')
    op.drop_index(op.f('ix_certifications_id'), table_name='certifications')
    op.drop_index(op.f('ix_certifications_gig_id'), table_name='certifications')
    op.drop_table('certifications')
    op.drop_index(op.f('ix_categories_id'), table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ###
